{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation EC2 with Docker: Create an Amazon EC2 instance running Ubuntu 16.04 LTS.",

  "Parameters" : {
    "Vpc": {
      "Type" : "AWS::EC2::VPC",
      "Description": "Id of the VPC",
    },

    "Az": {
      "Type" : "AWS::EC2::AvailabilityZone::Name",
      "Description": "Availability Zone where instance will be located"
    },

    "SubnetId": {
      "Type" : "String",
      "Description": "Id of subnet related to Az"
    },

    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t2.nano", "t2.micro", "t2.small", "t2.medium"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "TagApp" : {
      "Description" : "App Name",
      "Type" : "String"
    },

    "TagOwner" : {
      "Description" : "App Owner name or Id",
      "Type" : "String"
    },

    "TagEnv" : {
      "Description" : "Environment Type",
      "Type" : "String",
      "AllowedValues": ["dev", "stg", "prd"]
    },

    "TagRole" : {
      "Description" : "Server Role",
      "Type" : "String"
    },

    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
   }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"       : {"HVM64" : "ami-d15a75c7"},
    }
  },

  "Resources" : {
    "EC2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : { "Ref" : "InstanceType" },
        "AvailabilityZone": { "Ref": "Az"},
        "SubnetId": { "Ref": "SubnetId"},
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "BlockDeviceMappings" : [
          { "DeviceName" : "/dev/sda1",
            "Ebs" : { "VolumeSize" : "50" }
          }
        ],
        "Tags" : [
          { "Key" : "Name", "Value" : { "Ref": "AWS::StackName"} },
          { "Key" : "Owner", "Value" : { "Ref": "TagOwner"} },
          { "Key" : "app", "Value" : { "Ref": "TagApp"} },
          { "Key" : "env", "Value" : { "Ref": "TagEnv"} },
          { "Key" : "role", "Value" : { "Ref": "TagRole"} }
        ]
      },
      "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -e\n",
                "\n",
                "echo \"Installing Docker\"\n",
                "sudo apt-get update\n",
                "sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common\n",
                "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n",
                "add-apt-repository 'deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable'\n",
                "sudo apt-get update\n",
                "sudo apt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual\n",
                "apt-get install -y docker-ce\n",
                "usermod -aG docker ubuntu\n"
              ]
            ]
          }
        }
    },

    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : { "Ref" : "SSHLocation"}
        } ]
      }
    }
  },

  "Outputs" : {
    "InstanceId" : {
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "EC2Instance" }
    },
    "AZ" : {
      "Description" : "Availability Zone of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "EC2Instance", "AvailabilityZone" ] }
    },
  }
}
